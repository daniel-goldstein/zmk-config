/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "./keypos_34keys.h"
#include "./base.keymap"

#define XXX &none
#define ___ &trans

#define QWERTY 0
#define DV   1
#define NUM  2
#define EXT  3
#define SYM  4


#define SHIFTED_BEHAVIOR(name, unshifted, shifted) \
        name: name { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            label = #name; \
            bindings = <&kp unshifted>, <&kp shifted>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

#define HOME_ROW_MOD(name, trigger_key_positions) \
        name: name { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            flavor = "balanced"; \
            tapping-term-ms = <280>; \
            require-prior-idle-ms = <50>; \
            bindings = <&kp>, <&kp>; \
            hold-trigger-on-release; \
            hold-trigger-key-positions = <trigger_key_positions>; \
        };

/ {

    behaviors {
        SHIFTED_BEHAVIOR(dotGt,     DOT,  GT)
        SHIFTED_BEHAVIOR(cmmaLt,    CMMA, LT)
        SHIFTED_BEHAVIOR(quotDquot, SQT,  DQT)
        SHIFTED_BEHAVIOR(semiCol,   SEMI, COLON)

        HOME_ROW_MOD(hml, KEYS_R THUMBS)
        HOME_ROW_MOD(hmr, KEYS_L THUMBS)

        lt_cw: layer_tap_caps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "LAYER_TAP_CAPS_WORD";
            bindings = <&mo>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_z {
            timeout-ms = <50>;
            key-positions = <LT4 LT3>;
            bindings = <&kp Z>;
        };

        combo_q {
            timeout-ms = <50>;
            key-positions = <LT4 LT2>;
            bindings = <&kp Q>;
        };

        combo_bootloader_left {
            timeout-ms = <50>;
            key-positions = <LT3 LM3 LB3>;
            bindings = <&bootloader>;
        };

        combo_bootloader_right {
            timeout-ms = <50>;
            key-positions = <RT3 RM3 RB3>;
            bindings = <&bootloader>;
        };

        combo_reset_left {
            timeout-ms = <50>;
            key-positions = <LT4 LM4 LB4>;
            bindings = <&sys_reset>;
        };

        combo_reset_right {
            timeout-ms = <50>;
            key-positions = <RT4 RM4 RB4>;
            bindings = <&sys_reset>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
             &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &kp A   &hml LGUI S &hml LCTRL D &hml LSHIFT F &kp G     &kp H   &hmr RSHIFT J &hmr RCTRL K &hmr RGUI L  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M     &kp DOT    &kp CMMA    &kp SQT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                          &lt NUM 0   &lt_cw EXT 0    &lt SYM SPC  &tog DV
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };

        dvorak_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
             &kp P      &kp Y      &kp F      &kp G      &dotGt         &cmmaLt    &kp C      &kp R      &kp L      &kp J
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &kp A   &hml LGUI O &hml LCTRL E &hml LSHIFT U &kp I      &kp D  &hmr RSHIFT H &hmr RCTRL T &hmr RGUI N &kp S
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
             &kp Q      &kp K      &kp X      &kp B     &quotDquot     &semiCol    &kp M       &kp W     &kp V      &kp Z
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt NUM 0   &lt_cw EXT 0   &lt SYM SPC   ___
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };

        num_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
           &bt BT_CLR &bt BT_NXT &bt BT_PRV    &mu        XXX          &kp EQUAL   &kp N7     &kp N8     &kp N9      XXX
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              XXX      &kp LGUI   &kp LCTRL  &kp LSHFT    XXX          &kp STAR    &kp N4     &kp N5     &kp N6    &kp PLUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              XXX        XXX      &kp TAB    &kp BSPC     XXX          &kp FSLH    &kp N1     &kp N2     &kp N3    &kp MINUS
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             ___        ___             &kp ESC    &kp N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };

        ext_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
               XXX        XXX    &kp LS(TAB)   XXX       &kp SQT       &kp PG_UP  &kp HOME    &kp UP    &kp END      XXX
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              XXX      &kp LGUI   &kp LCTRL  &kp LSHFT    XXX          &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp DEL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp EXCL         XXX      &kp BSPC   &kp TAB      XXX        XXX
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                               ___        ___        &lt SYM RET &kp K_CANCEL
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };

        symbol_layer {
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp GRAVE   &kp LT     &kp GT    &kp CARET    XXX          &kp AMPS   &kp DLLR   &kp LBKT   &kp RBKT   &kp PRCNT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp EXCL  &kp MINUS   &kp PLUS   &kp EQUAL  &kp HASH       &kp PIPE   &kp COLON  &kp LPAR   &kp RPAR   &kp QMARK
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp BSLH   &kp FSLH   &kp STAR   &kp UNDER    XXX          &kp TILDE  &kp SEMI   &kp LBRC   &kp RBRC    &kp AT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                ___        ___            ___        ___
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };
    };
};
